name: Docker
description: Builds a docker image and optionally push it
author: batinicaz

inputs:
  image_name:
    description: The name of the image being built
    default: ghcr.io/${{ github.repository }}
    required: false
  image_tag:
    description: The tag of the image being built
    default: latest
    required: false
  registry:
    description: The container registry that will be used for image pushing
    default: ghcr.io
    required: false
  push:
    description: Push the image to the container registry?
    default: 'false'
    required: false
  token:
    description: Token to authenticate with registry. Required if pushing
    default: ''
    required: false

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # ratchet:actions/checkout@v4

    - name: Find latest version of golang
      id: golang
      uses: oprypin/find-latest-tag@dd2729fe78b0bb55523ae2b2a310c6773a652bd1 # ratchet:oprypin/find-latest-tag@v1
      with:
        repository: golang/go
        regex: '^go\d+\.\d+\.\d+$'

    - name: Find latest version of packer
      id: packer
      uses: oprypin/find-latest-tag@dd2729fe78b0bb55523ae2b2a310c6773a652bd1 # ratchet:oprypin/find-latest-tag@v1
      with:
        repository: hashicorp/packer
        releases-only: true
        regex: '^v\d+\.\d+\.\d+$'

    - name: Find latest version of terraform
      id: terraform
      uses: oprypin/find-latest-tag@dd2729fe78b0bb55523ae2b2a310c6773a652bd1 # ratchet:oprypin/find-latest-tag@v1
      with:
        repository: hashicorp/terraform
        releases-only: true
        regex: '^v\d+\.\d+\.\d+$'

    - name: Format versions correctly
      id: strip-prefix-from-tag
      run: |
        GO_TAG=${{ steps.golang.outputs.tag }}
        PACKER_TAG=${{ steps.packer.outputs.tag }}
        TF_TAG=${{ steps.terraform.outputs.tag }}
        echo "GO_VERSION=${GO_TAG#go}" >> $GITHUB_ENV
        echo "PACKER_VERSION=${PACKER_TAG#v}" >> $GITHUB_ENV
        echo "TF_VERSION=${TF_TAG#v}" >> $GITHUB_ENV
      shell: bash

    - name: Login to GitHub Container Registry
      if: ${{ inputs.push }}
      uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc # ratchet:docker/login-action@v2
      with:
        registry: ${{ inputs.registry }}
        username: ${{ github.actor }}
        password: ${{ inputs.token }}

    - name: Build image
      run: |
        docker build -t ${{ inputs.image_name }}:${{ inputs.image_tag }} \
        --build-arg GO_VERSION=${{ env.GO_VERSION }} \
        --build-arg PACKER_VERSION=${{ env.PACKER_VERSION }} \
        --build-arg TERRAFORM_VERSION=${{ env.TF_VERSION }} \
        .
      shell: bash

    - name: Scan image using Aqua Trivy
      uses: aquasecurity/trivy-action@a11da62073708815958ea6d84f5650c78a3ef85b # ratchet:aquasecurity/trivy-action@master
      if: always()
      with:
        image-ref: ${{ inputs.image_name }}:${{ inputs.image_tag }}
        format: 'sarif'
        exit-code: 1
        severity: LOW,MEDIUM,HIGH,CRITICAL
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@b8d3b6e8af63cde30bdc382c0bc28114f4346c88 # ratchet:github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results.sarif'

    - name: Push Docker image
      run: |
        if [[ "${{ inputs.push }}" == "true" ]]; then
          docker push ${{ inputs.image_name }}:${{ inputs.image_tag }}
        else
          echo 'Push skipped'
        fi
      shell: bash
